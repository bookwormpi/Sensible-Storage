name: Build and Release Sensible Storage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Get mod version
        id: get_version
        run: |
          version=$(grep '^mod_version=' gradle.properties | cut -d'=' -f2)
          echo "mod_version=$version" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check_release
        uses: actions/github-script@v7
        with:
          script: |
            const version = process.env.VERSION;
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const found = releases.find(r => r.tag_name === `v${version}`);
            if (found) {
              core.setOutput('exists', 'true');
            } else {
              core.setOutput('exists', 'false');
            }
        env:
          VERSION: ${{ steps.get_version.outputs.mod_version }}

      - name: Create release and upload jar
        if: steps.check_release.outputs.exists == 'false' && github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.mod_version }}
          name: Sensible Storage v${{ steps.get_version.outputs.mod_version }}
          files: build/libs/sensiblestorage-*.jar
          draft: false
          prerelease: false
          body: |
            ## Sensible Storage v${{ steps.get_version.outputs.mod_version }}
            
            Adds intelligent memory slots to containers, similar to SophisticatedBackpacks!
            
            ### Features:
            - SB-style memory button with brain icon
            - Container memory slot filtering
            - Persistent storage across sessions
            - Compatible with Minecraft 1.21.5
            
            **Download the JAR file below and place it in your `mods` folder.**
